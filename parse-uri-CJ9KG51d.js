import{g as r}from"./@colyseus-BMtxoHVo.js";const e=r(((r,e={})=>{if(!r)return;const o={key:["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"],q:{name:"queryKey",parser:/(?:^|&)([^&=]*)=?([^&]*)/g},parser:{strict:/^(?:([^:/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:/?#]*)(?::(\d*))?))?((((?:[^?#/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,loose:/^(?:(?![^:@]+:[^:@/]*@)([^:/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#/]*\.[^?#/.]+(?:[?#]|$)))*\/?)?([^?#/]*))(?:\?([^#]*))?(?:#(.*))?)/}},s=o.parser[e.strictMode?"strict":"loose"].exec(r),t={};let a=14;for(;a--;)t[o.key[a]]=s[a]||"";return t[o.q.name]={},t[o.key[12]].replace(o.q.parser,(function(r,e,s){e&&(t[o.q.name][e]=s)})),t}));export{e as p};
